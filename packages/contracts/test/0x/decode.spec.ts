import { SignerWithAddress } from '@nomiclabs/hardhat-ethers/signers';
import { ethers } from 'hardhat'
import { AbiCoder, defaultAbiCoder } from 'ethers/lib/utils';

// we prepare a setup for compound in hardhat
// this series of tests checks that the features used for the margin swap implementation
// are correctly set up and working
describe('0x setup', async () => {
    let deployer: SignerWithAddress

    beforeEach('Deploy Account, Trader, Uniswap and Compound', async () => {
        [deployer] = await ethers.getSigners();
    })

    it('decodes simple', async () => {

        const data = "0x00000000000000000000000000000000000000000000000000000000000004d20000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000b48656c6c6f20576f726c64000000000000000000000000000000000000000000";
        const res = defaultAbiCoder.decode(["uint", "string"], data);
        console.log(res)
    })


    it('decodes call', async () => {
        const testInput = '0x803ba26d000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000009b6e64a8ec600000000000000000000000000000000000000000000000000000a5ab89fe28f9e810000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002bae78736cd615f374d3085123a210448e74fc63930001f4c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2000000000000000000000000000000000000000000869584cd00000000000000000000000086003b044f70dac0abc80ac8957305b6370893ed0000000000000000000000000000000000000000000000a5d57ebd2d63f99dd2'
        const inputtypesSimple = ['bytes', 'uint', 'uint', 'address']
        const res = AbiCoder.prototype.decode(
            inputtypesSimple,
            ethers.utils.hexDataSlice(testInput, 4)
        )
        console.log(res)
    })


    it('decodes call 2', async () => {
        const testInput = '0x3598d8ab00000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000f3a1ee76e72acb474a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000042c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20001f4a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48002710cc4304a31d09258b0029ea7fe63d032f52e44efe000000000000000000000000000000000000000000000000000000000000869584cd00000000000000000000000010000000000000000000000000000000000000110000000000000000000000000000000000000000000000ab1dd6f2b563fa2b2c'

        const inputTypes = ['bytes encodedPath',
            'uint256 minBuyAmount', 'address recipient'
        ]

        const res = AbiCoder.prototype.decode(
            inputTypes,
            ethers.utils.hexDataSlice(testInput, 4)
        )
        console.log(res)
    })

})
