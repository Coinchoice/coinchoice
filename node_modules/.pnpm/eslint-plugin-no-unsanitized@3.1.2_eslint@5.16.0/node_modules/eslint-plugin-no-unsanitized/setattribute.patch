diff --git a/lib/ruleHelper.js b/lib/ruleHelper.js
index 0c3c8a0..a3f35c0 100644
--- a/lib/ruleHelper.js
+++ b/lib/ruleHelper.js
@@ -234,7 +234,10 @@ RuleHelper.prototype = {
                 const argument = node.arguments[propertyId];
                 if (this.shouldCheckMethodCall(node, ruleCheck.objectMatches)
                     && !this.allowedExpression(argument, ruleCheck.escape)) {
-                    this.context.report(node, `Unsafe call to ${this.getCodeName(node.callee)} for argument ${propertyId}`);
+                    const funcName = this.getCodeName(node.callee);
+                    if (funcName.includes("setAttribute")) {
+                        this.context.report(node, `Unsafe call to ${this.getCodeName(node.callee)} for argument ${propertyId}`);
+                    }
                 }
             });
         }
diff --git a/lib/rules/method.js b/lib/rules/method.js
index 1be3846..c344f9c 100644
--- a/lib/rules/method.js
+++ b/lib/rules/method.js
@@ -45,6 +45,9 @@ const defaultRuleChecks = {
             "document"
         ],
         properties: [0]
+    },
+    setAttribute: {
+        properties: [1]
     }
 };
 
