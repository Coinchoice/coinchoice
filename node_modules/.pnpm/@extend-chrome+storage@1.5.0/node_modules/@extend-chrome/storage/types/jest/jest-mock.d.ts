/// <reference types="jest" />
import { Bucket, Changes } from '..';
import { Subject } from 'rxjs';
/**
 * This module is a pre-mocked version of storage for use with Jest.
 *
 * The event streams are RxJs Subjects
 *
 * ```javascript
 * // __mocks__/storage.js
 * module.exports = require('@extend-chrome/storage/jest')
 * ```
 *
 * ```typescript
 * // __mocks__/storage.ts
 * export * from '@extend-chrome/storage/jest'
 * ```
 */
export interface MockBucket<T extends object> extends Bucket<T> {
    get: jest.MockedFunction<Bucket<T>['get']>;
    set: jest.MockedFunction<Bucket<T>['set']>;
    update: jest.MockedFunction<Bucket<T>['update']>;
    remove: jest.MockedFunction<Bucket<T>['remove']>;
    clear: jest.MockedFunction<Bucket<T>['clear']>;
    changeStream: Subject<Changes<T>>;
    valueStream: Subject<T>;
}
export declare const getBucket: <T extends object>(bucketName: string, areaName?: string | undefined) => MockBucket<T>;
export declare const useBucket: (areaName: string, bucketName: string) => MockBucket<object>;
/**
 * Buckets for each storage area.
 */
export declare const storage: {
    local: MockBucket<Record<string, any>>;
    sync: MockBucket<Record<string, any>>;
    managed: MockBucket<Record<string, any>>;
};
